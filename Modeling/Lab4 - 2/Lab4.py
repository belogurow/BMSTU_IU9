import math

thA0 = [16.551, 16.810, 14.434, 20.891, 13.773, 14.739, 24.713, 10.127, 14.689, 13.047, 16.487, 14.345]
rA0 = [14.899, 14.292, 13.046, 18.696, 12.468, 13.313, 22.040, 9.278, 13.269, 11.833, 14.843, 12.968]
thA1 = [30.746, 22.558, 28.001, 32.958, 28.277, 36.763, 34.650, 33.590, 12.239, 35.848, 38.451, 18.573]
rA1 = [27.320, 20.155, 24.916, 29.255, 25.159, 32.398, 30.735, 29.808, 11.126, 31.784, 34.061, 16.668]
thB0 = [32.822, 25.314, 36.918, 46.677, 16.909, 21.889, 34.998, 23.285, 21.561, 37.778, 29.376, 32.822]
rB0 = [29.553, 22.567, 32.720, 41.259, 15.212, 19.569, 31.040, 20.791, 19.282, 33.472, 26.120, 29.553]
thB1 = [21.002, 40.022, 35.118, 20.283, 41.746, 40.458, 19.478, 22.974, 25.348, 25.336, 23.743, 29.751]
rB1 = [18.793, 35.436, 31.145, 18.164, 36.944, 35.817, 17.460, 21.353, 23.430, 22.586, 22.025, 27.282]
thC0 = [17.084, 29.096, 38.639, 23.690, 29.087, 21.993, 30.082, 18.776, 34.808, 26.192, 18.230, 37.085]
rC0 = [15.365, 25.876, 34.226, 21.145, 25.868, 20.494, 26.738, 17.263, 31.290, 23.751, 16.784, 33.283]
thC1 = [4.544, 17.519, 38.841, 37.324, 16.717, 40.099, 42.244, 22.099, 40.895, 17.519, 38.841, 37.324]
rC1 = [3.118, 16.162, 34.819, 33.492, 15.461, 35.920, 37.797, 20.170, 36.617, 16.162, 34.819, 33.492]


def x_avg(x_values):
	return (1 / len(x_values)) * sum(x_values)


def dispersion(x_values):
	x_average = x_avg(x_values)
	new_values = [(x - x_average) ** 2 for x in x_values]

	return (1 / len(new_values)) * sum(new_values)


def alpha_betta(psi_1, psi_2):
	psi_1 = list(map(math.log2, psi_1))
	psi_2 = list(map(math.log2, psi_2))

	betta = math.sqrt(dispersion(psi_1) / dispersion(psi_2))
	alpha = math.exp(x_avg(psi_1) - betta * x_avg(psi_2))

	return alpha, betta


if __name__ == "__main__":
	a, b = alpha_betta(thA0, rA0)
	print("thA0, rA0: a =", a, "b =", b)
	a, b = alpha_betta(thA1, rA1)
	print("thA1, rA1: a =", a, "b =", b)
	a, b = alpha_betta(thB0, rB0)
	print("thB0, rB0: a =", a, "b =", b)
	a, b = alpha_betta(thB1, rB1)
	print("thB1, rB1: a =", a, "b =", b)
	a, b = alpha_betta(thC0, rC0)
	print("thC0, rC0: a =", a, "b =", b)
	a, b = alpha_betta(thC1, rC1)
	print("thC1, rC1: a =", a, "b =", b)